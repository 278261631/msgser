package domain.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class EventExample {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table eventlist
     *
     * @abatorgenerated Fri Mar 17 21:28:15 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table eventlist
     *
     * @abatorgenerated Fri Mar 17 21:28:15 CST 2017
     */
    protected List oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table eventlist
     *
     * @abatorgenerated Fri Mar 17 21:28:15 CST 2017
     */
    public EventExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table eventlist
     *
     * @abatorgenerated Fri Mar 17 21:28:15 CST 2017
     */
    protected EventExample(EventExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table eventlist
     *
     * @abatorgenerated Fri Mar 17 21:28:15 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table eventlist
     *
     * @abatorgenerated Fri Mar 17 21:28:15 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table eventlist
     *
     * @abatorgenerated Fri Mar 17 21:28:15 CST 2017
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table eventlist
     *
     * @abatorgenerated Fri Mar 17 21:28:15 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table eventlist
     *
     * @abatorgenerated Fri Mar 17 21:28:15 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table eventlist
     *
     * @abatorgenerated Fri Mar 17 21:28:15 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table eventlist
     *
     * @abatorgenerated Fri Mar 17 21:28:15 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table eventlist
     *
     * @abatorgenerated Fri Mar 17 21:28:15 CST 2017
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andEventidIsNull() {
            addCriterion("eventid is null");
            return this;
        }

        public Criteria andEventidIsNotNull() {
            addCriterion("eventid is not null");
            return this;
        }

        public Criteria andEventidEqualTo(Integer value) {
            addCriterion("eventid =", value, "eventid");
            return this;
        }

        public Criteria andEventidNotEqualTo(Integer value) {
            addCriterion("eventid <>", value, "eventid");
            return this;
        }

        public Criteria andEventidGreaterThan(Integer value) {
            addCriterion("eventid >", value, "eventid");
            return this;
        }

        public Criteria andEventidGreaterThanOrEqualTo(Integer value) {
            addCriterion("eventid >=", value, "eventid");
            return this;
        }

        public Criteria andEventidLessThan(Integer value) {
            addCriterion("eventid <", value, "eventid");
            return this;
        }

        public Criteria andEventidLessThanOrEqualTo(Integer value) {
            addCriterion("eventid <=", value, "eventid");
            return this;
        }

        public Criteria andEventidIn(List values) {
            addCriterion("eventid in", values, "eventid");
            return this;
        }

        public Criteria andEventidNotIn(List values) {
            addCriterion("eventid not in", values, "eventid");
            return this;
        }

        public Criteria andEventidBetween(Integer value1, Integer value2) {
            addCriterion("eventid between", value1, value2, "eventid");
            return this;
        }

        public Criteria andEventidNotBetween(Integer value1, Integer value2) {
            addCriterion("eventid not between", value1, value2, "eventid");
            return this;
        }

        public Criteria andEqpidIsNull() {
            addCriterion("eqpid is null");
            return this;
        }

        public Criteria andEqpidIsNotNull() {
            addCriterion("eqpid is not null");
            return this;
        }

        public Criteria andEqpidEqualTo(Integer value) {
            addCriterion("eqpid =", value, "eqpid");
            return this;
        }

        public Criteria andEqpidNotEqualTo(Integer value) {
            addCriterion("eqpid <>", value, "eqpid");
            return this;
        }

        public Criteria andEqpidGreaterThan(Integer value) {
            addCriterion("eqpid >", value, "eqpid");
            return this;
        }

        public Criteria andEqpidGreaterThanOrEqualTo(Integer value) {
            addCriterion("eqpid >=", value, "eqpid");
            return this;
        }

        public Criteria andEqpidLessThan(Integer value) {
            addCriterion("eqpid <", value, "eqpid");
            return this;
        }

        public Criteria andEqpidLessThanOrEqualTo(Integer value) {
            addCriterion("eqpid <=", value, "eqpid");
            return this;
        }

        public Criteria andEqpidIn(List values) {
            addCriterion("eqpid in", values, "eqpid");
            return this;
        }

        public Criteria andEqpidNotIn(List values) {
            addCriterion("eqpid not in", values, "eqpid");
            return this;
        }

        public Criteria andEqpidBetween(Integer value1, Integer value2) {
            addCriterion("eqpid between", value1, value2, "eqpid");
            return this;
        }

        public Criteria andEqpidNotBetween(Integer value1, Integer value2) {
            addCriterion("eqpid not between", value1, value2, "eqpid");
            return this;
        }

        public Criteria andTitleIsNull() {
            addCriterion("title is null");
            return this;
        }

        public Criteria andTitleIsNotNull() {
            addCriterion("title is not null");
            return this;
        }

        public Criteria andTitleEqualTo(String value) {
            addCriterion("title =", value, "title");
            return this;
        }

        public Criteria andTitleNotEqualTo(String value) {
            addCriterion("title <>", value, "title");
            return this;
        }

        public Criteria andTitleGreaterThan(String value) {
            addCriterion("title >", value, "title");
            return this;
        }

        public Criteria andTitleGreaterThanOrEqualTo(String value) {
            addCriterion("title >=", value, "title");
            return this;
        }

        public Criteria andTitleLessThan(String value) {
            addCriterion("title <", value, "title");
            return this;
        }

        public Criteria andTitleLessThanOrEqualTo(String value) {
            addCriterion("title <=", value, "title");
            return this;
        }

        public Criteria andTitleLike(String value) {
            addCriterion("title like", value, "title");
            return this;
        }

        public Criteria andTitleNotLike(String value) {
            addCriterion("title not like", value, "title");
            return this;
        }

        public Criteria andTitleIn(List values) {
            addCriterion("title in", values, "title");
            return this;
        }

        public Criteria andTitleNotIn(List values) {
            addCriterion("title not in", values, "title");
            return this;
        }

        public Criteria andTitleBetween(String value1, String value2) {
            addCriterion("title between", value1, value2, "title");
            return this;
        }

        public Criteria andTitleNotBetween(String value1, String value2) {
            addCriterion("title not between", value1, value2, "title");
            return this;
        }

        public Criteria andStarttimeIsNull() {
            addCriterion("starttime is null");
            return this;
        }

        public Criteria andStarttimeIsNotNull() {
            addCriterion("starttime is not null");
            return this;
        }

        public Criteria andStarttimeEqualTo(String value) {
            addCriterion("starttime =", value, "starttime");
            return this;
        }

        public Criteria andStarttimeNotEqualTo(String value) {
            addCriterion("starttime <>", value, "starttime");
            return this;
        }

        public Criteria andStarttimeGreaterThan(String value) {
            addCriterion("starttime >", value, "starttime");
            return this;
        }

        public Criteria andStarttimeGreaterThanOrEqualTo(String value) {
            addCriterion("starttime >=", value, "starttime");
            return this;
        }

        public Criteria andStarttimeLessThan(String value) {
            addCriterion("starttime <", value, "starttime");
            return this;
        }

        public Criteria andStarttimeLessThanOrEqualTo(String value) {
            addCriterion("starttime <=", value, "starttime");
            return this;
        }

        public Criteria andStarttimeLike(String value) {
            addCriterion("starttime like", value, "starttime");
            return this;
        }

        public Criteria andStarttimeNotLike(String value) {
            addCriterion("starttime not like", value, "starttime");
            return this;
        }

        public Criteria andStarttimeIn(List values) {
            addCriterion("starttime in", values, "starttime");
            return this;
        }

        public Criteria andStarttimeNotIn(List values) {
            addCriterion("starttime not in", values, "starttime");
            return this;
        }

        public Criteria andStarttimeBetween(String value1, String value2) {
            addCriterion("starttime between", value1, value2, "starttime");
            return this;
        }

        public Criteria andStarttimeNotBetween(String value1, String value2) {
            addCriterion("starttime not between", value1, value2, "starttime");
            return this;
        }

        public Criteria andEndtimeIsNull() {
            addCriterion("endtime is null");
            return this;
        }

        public Criteria andEndtimeIsNotNull() {
            addCriterion("endtime is not null");
            return this;
        }

        public Criteria andEndtimeEqualTo(String value) {
            addCriterion("endtime =", value, "endtime");
            return this;
        }

        public Criteria andEndtimeNotEqualTo(String value) {
            addCriterion("endtime <>", value, "endtime");
            return this;
        }

        public Criteria andEndtimeGreaterThan(String value) {
            addCriterion("endtime >", value, "endtime");
            return this;
        }

        public Criteria andEndtimeGreaterThanOrEqualTo(String value) {
            addCriterion("endtime >=", value, "endtime");
            return this;
        }

        public Criteria andEndtimeLessThan(String value) {
            addCriterion("endtime <", value, "endtime");
            return this;
        }

        public Criteria andEndtimeLessThanOrEqualTo(String value) {
            addCriterion("endtime <=", value, "endtime");
            return this;
        }

        public Criteria andEndtimeLike(String value) {
            addCriterion("endtime like", value, "endtime");
            return this;
        }

        public Criteria andEndtimeNotLike(String value) {
            addCriterion("endtime not like", value, "endtime");
            return this;
        }

        public Criteria andEndtimeIn(List values) {
            addCriterion("endtime in", values, "endtime");
            return this;
        }

        public Criteria andEndtimeNotIn(List values) {
            addCriterion("endtime not in", values, "endtime");
            return this;
        }

        public Criteria andEndtimeBetween(String value1, String value2) {
            addCriterion("endtime between", value1, value2, "endtime");
            return this;
        }

        public Criteria andEndtimeNotBetween(String value1, String value2) {
            addCriterion("endtime not between", value1, value2, "endtime");
            return this;
        }

        public Criteria andUseridIsNull() {
            addCriterion("userid is null");
            return this;
        }

        public Criteria andUseridIsNotNull() {
            addCriterion("userid is not null");
            return this;
        }

        public Criteria andUseridEqualTo(Integer value) {
            addCriterion("userid =", value, "userid");
            return this;
        }

        public Criteria andUseridNotEqualTo(Integer value) {
            addCriterion("userid <>", value, "userid");
            return this;
        }

        public Criteria andUseridGreaterThan(Integer value) {
            addCriterion("userid >", value, "userid");
            return this;
        }

        public Criteria andUseridGreaterThanOrEqualTo(Integer value) {
            addCriterion("userid >=", value, "userid");
            return this;
        }

        public Criteria andUseridLessThan(Integer value) {
            addCriterion("userid <", value, "userid");
            return this;
        }

        public Criteria andUseridLessThanOrEqualTo(Integer value) {
            addCriterion("userid <=", value, "userid");
            return this;
        }

        public Criteria andUseridIn(List values) {
            addCriterion("userid in", values, "userid");
            return this;
        }

        public Criteria andUseridNotIn(List values) {
            addCriterion("userid not in", values, "userid");
            return this;
        }

        public Criteria andUseridBetween(Integer value1, Integer value2) {
            addCriterion("userid between", value1, value2, "userid");
            return this;
        }

        public Criteria andUseridNotBetween(Integer value1, Integer value2) {
            addCriterion("userid not between", value1, value2, "userid");
            return this;
        }
    }
}