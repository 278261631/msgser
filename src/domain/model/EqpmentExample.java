package domain.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class EqpmentExample {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table eqplist
     *
     * @abatorgenerated Wed Mar 15 19:59:10 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table eqplist
     *
     * @abatorgenerated Wed Mar 15 19:59:10 CST 2017
     */
    protected List oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table eqplist
     *
     * @abatorgenerated Wed Mar 15 19:59:10 CST 2017
     */
    public EqpmentExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table eqplist
     *
     * @abatorgenerated Wed Mar 15 19:59:10 CST 2017
     */
    protected EqpmentExample(EqpmentExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table eqplist
     *
     * @abatorgenerated Wed Mar 15 19:59:10 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table eqplist
     *
     * @abatorgenerated Wed Mar 15 19:59:10 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table eqplist
     *
     * @abatorgenerated Wed Mar 15 19:59:10 CST 2017
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table eqplist
     *
     * @abatorgenerated Wed Mar 15 19:59:10 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table eqplist
     *
     * @abatorgenerated Wed Mar 15 19:59:10 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table eqplist
     *
     * @abatorgenerated Wed Mar 15 19:59:10 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table eqplist
     *
     * @abatorgenerated Wed Mar 15 19:59:10 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table eqplist
     *
     * @abatorgenerated Wed Mar 15 19:59:10 CST 2017
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andEqplistlogidIsNull() {
            addCriterion("eqplistlogid is null");
            return this;
        }

        public Criteria andEqplistlogidIsNotNull() {
            addCriterion("eqplistlogid is not null");
            return this;
        }

        public Criteria andEqplistlogidEqualTo(Integer value) {
            addCriterion("eqplistlogid =", value, "eqplistlogid");
            return this;
        }

        public Criteria andEqplistlogidNotEqualTo(Integer value) {
            addCriterion("eqplistlogid <>", value, "eqplistlogid");
            return this;
        }

        public Criteria andEqplistlogidGreaterThan(Integer value) {
            addCriterion("eqplistlogid >", value, "eqplistlogid");
            return this;
        }

        public Criteria andEqplistlogidGreaterThanOrEqualTo(Integer value) {
            addCriterion("eqplistlogid >=", value, "eqplistlogid");
            return this;
        }

        public Criteria andEqplistlogidLessThan(Integer value) {
            addCriterion("eqplistlogid <", value, "eqplistlogid");
            return this;
        }

        public Criteria andEqplistlogidLessThanOrEqualTo(Integer value) {
            addCriterion("eqplistlogid <=", value, "eqplistlogid");
            return this;
        }

        public Criteria andEqplistlogidIn(List values) {
            addCriterion("eqplistlogid in", values, "eqplistlogid");
            return this;
        }

        public Criteria andEqplistlogidNotIn(List values) {
            addCriterion("eqplistlogid not in", values, "eqplistlogid");
            return this;
        }

        public Criteria andEqplistlogidBetween(Integer value1, Integer value2) {
            addCriterion("eqplistlogid between", value1, value2, "eqplistlogid");
            return this;
        }

        public Criteria andEqplistlogidNotBetween(Integer value1, Integer value2) {
            addCriterion("eqplistlogid not between", value1, value2, "eqplistlogid");
            return this;
        }

        public Criteria andQuipnameIsNull() {
            addCriterion("quipname is null");
            return this;
        }

        public Criteria andQuipnameIsNotNull() {
            addCriterion("quipname is not null");
            return this;
        }

        public Criteria andQuipnameEqualTo(String value) {
            addCriterion("quipname =", value, "quipname");
            return this;
        }

        public Criteria andQuipnameNotEqualTo(String value) {
            addCriterion("quipname <>", value, "quipname");
            return this;
        }

        public Criteria andQuipnameGreaterThan(String value) {
            addCriterion("quipname >", value, "quipname");
            return this;
        }

        public Criteria andQuipnameGreaterThanOrEqualTo(String value) {
            addCriterion("quipname >=", value, "quipname");
            return this;
        }

        public Criteria andQuipnameLessThan(String value) {
            addCriterion("quipname <", value, "quipname");
            return this;
        }

        public Criteria andQuipnameLessThanOrEqualTo(String value) {
            addCriterion("quipname <=", value, "quipname");
            return this;
        }

        public Criteria andQuipnameLike(String value) {
            addCriterion("quipname like", value, "quipname");
            return this;
        }

        public Criteria andQuipnameNotLike(String value) {
            addCriterion("quipname not like", value, "quipname");
            return this;
        }

        public Criteria andQuipnameIn(List values) {
            addCriterion("quipname in", values, "quipname");
            return this;
        }

        public Criteria andQuipnameNotIn(List values) {
            addCriterion("quipname not in", values, "quipname");
            return this;
        }

        public Criteria andQuipnameBetween(String value1, String value2) {
            addCriterion("quipname between", value1, value2, "quipname");
            return this;
        }

        public Criteria andQuipnameNotBetween(String value1, String value2) {
            addCriterion("quipname not between", value1, value2, "quipname");
            return this;
        }

        public Criteria andQuipidIsNull() {
            addCriterion("quipid is null");
            return this;
        }

        public Criteria andQuipidIsNotNull() {
            addCriterion("quipid is not null");
            return this;
        }

        public Criteria andQuipidEqualTo(Integer value) {
            addCriterion("quipid =", value, "quipid");
            return this;
        }

        public Criteria andQuipidNotEqualTo(Integer value) {
            addCriterion("quipid <>", value, "quipid");
            return this;
        }

        public Criteria andQuipidGreaterThan(Integer value) {
            addCriterion("quipid >", value, "quipid");
            return this;
        }

        public Criteria andQuipidGreaterThanOrEqualTo(Integer value) {
            addCriterion("quipid >=", value, "quipid");
            return this;
        }

        public Criteria andQuipidLessThan(Integer value) {
            addCriterion("quipid <", value, "quipid");
            return this;
        }

        public Criteria andQuipidLessThanOrEqualTo(Integer value) {
            addCriterion("quipid <=", value, "quipid");
            return this;
        }

        public Criteria andQuipidIn(List values) {
            addCriterion("quipid in", values, "quipid");
            return this;
        }

        public Criteria andQuipidNotIn(List values) {
            addCriterion("quipid not in", values, "quipid");
            return this;
        }

        public Criteria andQuipidBetween(Integer value1, Integer value2) {
            addCriterion("quipid between", value1, value2, "quipid");
            return this;
        }

        public Criteria andQuipidNotBetween(Integer value1, Integer value2) {
            addCriterion("quipid not between", value1, value2, "quipid");
            return this;
        }

        public Criteria andQuipstatsIsNull() {
            addCriterion("quipstats is null");
            return this;
        }

        public Criteria andQuipstatsIsNotNull() {
            addCriterion("quipstats is not null");
            return this;
        }

        public Criteria andQuipstatsEqualTo(String value) {
            addCriterion("quipstats =", value, "quipstats");
            return this;
        }

        public Criteria andQuipstatsNotEqualTo(String value) {
            addCriterion("quipstats <>", value, "quipstats");
            return this;
        }

        public Criteria andQuipstatsGreaterThan(String value) {
            addCriterion("quipstats >", value, "quipstats");
            return this;
        }

        public Criteria andQuipstatsGreaterThanOrEqualTo(String value) {
            addCriterion("quipstats >=", value, "quipstats");
            return this;
        }

        public Criteria andQuipstatsLessThan(String value) {
            addCriterion("quipstats <", value, "quipstats");
            return this;
        }

        public Criteria andQuipstatsLessThanOrEqualTo(String value) {
            addCriterion("quipstats <=", value, "quipstats");
            return this;
        }

        public Criteria andQuipstatsLike(String value) {
            addCriterion("quipstats like", value, "quipstats");
            return this;
        }

        public Criteria andQuipstatsNotLike(String value) {
            addCriterion("quipstats not like", value, "quipstats");
            return this;
        }

        public Criteria andQuipstatsIn(List values) {
            addCriterion("quipstats in", values, "quipstats");
            return this;
        }

        public Criteria andQuipstatsNotIn(List values) {
            addCriterion("quipstats not in", values, "quipstats");
            return this;
        }

        public Criteria andQuipstatsBetween(String value1, String value2) {
            addCriterion("quipstats between", value1, value2, "quipstats");
            return this;
        }

        public Criteria andQuipstatsNotBetween(String value1, String value2) {
            addCriterion("quipstats not between", value1, value2, "quipstats");
            return this;
        }

        public Criteria andSitelocationIsNull() {
            addCriterion("sitelocation is null");
            return this;
        }

        public Criteria andSitelocationIsNotNull() {
            addCriterion("sitelocation is not null");
            return this;
        }

        public Criteria andSitelocationEqualTo(Integer value) {
            addCriterion("sitelocation =", value, "sitelocation");
            return this;
        }

        public Criteria andSitelocationNotEqualTo(Integer value) {
            addCriterion("sitelocation <>", value, "sitelocation");
            return this;
        }

        public Criteria andSitelocationGreaterThan(Integer value) {
            addCriterion("sitelocation >", value, "sitelocation");
            return this;
        }

        public Criteria andSitelocationGreaterThanOrEqualTo(Integer value) {
            addCriterion("sitelocation >=", value, "sitelocation");
            return this;
        }

        public Criteria andSitelocationLessThan(Integer value) {
            addCriterion("sitelocation <", value, "sitelocation");
            return this;
        }

        public Criteria andSitelocationLessThanOrEqualTo(Integer value) {
            addCriterion("sitelocation <=", value, "sitelocation");
            return this;
        }

        public Criteria andSitelocationIn(List values) {
            addCriterion("sitelocation in", values, "sitelocation");
            return this;
        }

        public Criteria andSitelocationNotIn(List values) {
            addCriterion("sitelocation not in", values, "sitelocation");
            return this;
        }

        public Criteria andSitelocationBetween(Integer value1, Integer value2) {
            addCriterion("sitelocation between", value1, value2, "sitelocation");
            return this;
        }

        public Criteria andSitelocationNotBetween(Integer value1, Integer value2) {
            addCriterion("sitelocation not between", value1, value2, "sitelocation");
            return this;
        }

        public Criteria andSitenameIsNull() {
            addCriterion("sitename is null");
            return this;
        }

        public Criteria andSitenameIsNotNull() {
            addCriterion("sitename is not null");
            return this;
        }

        public Criteria andSitenameEqualTo(Integer value) {
            addCriterion("sitename =", value, "sitename");
            return this;
        }

        public Criteria andSitenameNotEqualTo(Integer value) {
            addCriterion("sitename <>", value, "sitename");
            return this;
        }

        public Criteria andSitenameGreaterThan(Integer value) {
            addCriterion("sitename >", value, "sitename");
            return this;
        }

        public Criteria andSitenameGreaterThanOrEqualTo(Integer value) {
            addCriterion("sitename >=", value, "sitename");
            return this;
        }

        public Criteria andSitenameLessThan(Integer value) {
            addCriterion("sitename <", value, "sitename");
            return this;
        }

        public Criteria andSitenameLessThanOrEqualTo(Integer value) {
            addCriterion("sitename <=", value, "sitename");
            return this;
        }

        public Criteria andSitenameIn(List values) {
            addCriterion("sitename in", values, "sitename");
            return this;
        }

        public Criteria andSitenameNotIn(List values) {
            addCriterion("sitename not in", values, "sitename");
            return this;
        }

        public Criteria andSitenameBetween(Integer value1, Integer value2) {
            addCriterion("sitename between", value1, value2, "sitename");
            return this;
        }

        public Criteria andSitenameNotBetween(Integer value1, Integer value2) {
            addCriterion("sitename not between", value1, value2, "sitename");
            return this;
        }
    }
}