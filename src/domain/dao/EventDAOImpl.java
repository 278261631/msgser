package domain.dao;

import domain.model.Event;
import domain.model.EventExample;

import java.sql.SQLException;
import java.util.List;
//import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class EventDAOImpl extends SqlMapClientDaoSupport implements EventDAO {

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table eventlist
     *
     * @abatorgenerated Fri Mar 17 21:28:15 CST 2017
     */
    public EventDAOImpl() {
        super();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table eventlist
     * @throws SQLException 
     *
     * @abatorgenerated Fri Mar 17 21:28:15 CST 2017
     */
    public void insert(Event record) throws SQLException {
        getSqlMapClientTemplate().insert("eventlist.abatorgenerated_insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table eventlist
     * @throws SQLException 
     *
     * @abatorgenerated Fri Mar 17 21:28:15 CST 2017
     */
    public int updateByPrimaryKey(Event record) throws SQLException {
        int rows = getSqlMapClientTemplate().update("eventlist.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table eventlist
     * @throws SQLException 
     *
     * @abatorgenerated Fri Mar 17 21:28:15 CST 2017
     */
    public int updateByPrimaryKeySelective(Event record) throws SQLException {
        int rows = getSqlMapClientTemplate().update("eventlist.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table eventlist
     * @throws SQLException 
     *
     * @abatorgenerated Fri Mar 17 21:28:15 CST 2017
     */
    public List selectByExample(EventExample example) throws SQLException {
        List list = getSqlMapClientTemplate().queryForList("eventlist.abatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table eventlist
     * @throws SQLException 
     *
     * @abatorgenerated Fri Mar 17 21:28:15 CST 2017
     */
    public Event selectByPrimaryKey(Integer eventid) throws SQLException {
        Event key = new Event();
        key.setEventid(eventid);
        Event record = (Event) getSqlMapClientTemplate().queryForObject("eventlist.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table eventlist
     * @throws SQLException 
     *
     * @abatorgenerated Fri Mar 17 21:28:15 CST 2017
     */
    public int deleteByExample(EventExample example) throws SQLException {
        int rows = getSqlMapClientTemplate().delete("eventlist.abatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table eventlist
     * @throws SQLException 
     *
     * @abatorgenerated Fri Mar 17 21:28:15 CST 2017
     */
    public int deleteByPrimaryKey(Integer eventid) throws SQLException {
        Event key = new Event();
        key.setEventid(eventid);
        int rows = getSqlMapClientTemplate().delete("eventlist.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table eventlist
     * @throws SQLException 
     *
     * @abatorgenerated Fri Mar 17 21:28:15 CST 2017
     */
    public int countByExample(EventExample example) throws SQLException {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("eventlist.abatorgenerated_countByExample", example);
        return count.intValue();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table eventlist
     * @throws SQLException 
     *
     * @abatorgenerated Fri Mar 17 21:28:15 CST 2017
     */
    public int updateByExampleSelective(Event record, EventExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("eventlist.abatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table eventlist
     * @throws SQLException 
     *
     * @abatorgenerated Fri Mar 17 21:28:15 CST 2017
     */
    public int updateByExample(Event record, EventExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("eventlist.abatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table eventlist
     *
     * @abatorgenerated Fri Mar 17 21:28:15 CST 2017
     */
    private static class UpdateByExampleParms extends EventExample {
        private Object record;

        public UpdateByExampleParms(Object record, EventExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}